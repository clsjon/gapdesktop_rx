<?xml version='1.0' encoding='UTF-8'?>
<s:WindowedApplication 
	xmlns:lib="assets.graphics.Desktop_mockup_091104_copy.*" 
	xmlns:ATE="http://ns.adobe.com/ate/2009" 
	xmlns:ai="http://ns.adobe.com/ai/2009" 
	xmlns:fc="http://ns.adobe.com/flashcatalyst/2009" 
	xmlns:d="http://ns.adobe.com/fxg/2008/dt" 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:flm="http://ns.adobe.com/flame/2008" 
	xmlns:components="gapdesktoprx.components.catalyst.*" 
	xmlns:main="gapdesktoprx.components.main.*"
	xmlns:containers="flexlib.containers.*"
	xmlns:local="*" 
	xmlns:mx="library://ns.adobe.com/flex/halo"
	
	backgroundColor="#ffffff" 
	height="517" 
	width="655" 
	height.TlzState = "{Capabilities.screenResolutionY}"
	width.TlzState = "{Capabilities.screenResolutionX}"
	initialize="windowedapplication1_initializeHandler(event)"		
	preinitialize="windowedapplication1_preinitializeHandler(event)"
	preloaderBaseColor="#FFFFFF" 
	>
	<fx:Script><![CDATA[
		import flash.events.MouseEvent;
		import flash.system.Capabilities;
		
		import gapdesktoprx.controllers.ApplicationController;
		import gapdesktoprx.models.Example;
		import gapdesktoprx.components.main.GraphViewer;
		
		import mx.events.FlexEvent;
		import mx.events.StateChangeEvent;
		
		import org.restfulx.Rx;
		import org.restfulx.services.air.AIRServiceProvider;
		import org.restfulx.utils.RxUtils;
		
		import spark.events.IndexChangeEvent;
		
		[Bindable]
		private var example:Example = new Example();
		
		import org.restfulx.Rx;
		import org.restfulx.utils.RxUtils;
		
		
		protected function button_clickHandler():void
		{
			currentState='SettingsState';
		}
		
		
		protected function closeSettingsButton_clickHandler():void
		{
			currentState='MainState';
		}
		
		
		protected function tosbutton_clickHandler():void
		{
			currentState='TosState';
		}
		
		
		protected function button_clickHandler_3():void
		{
			Sequence1.play();
			currentState='SettingsState';
		}
		
		private function admin_clickHandler(event:MouseEvent):void {
			var gdrx:GapdesktopRx;
			gdrx = new GapdesktopRx;
			gdrx.open();
		}
		
		
		
		
		protected function list1_clickHandler(event:MouseEvent):void
		{
			trace(event.toString());
			currentState='TlzState';
		}
		
		
		
		protected function traceState(event:StateChangeEvent):void {
			if (event.newState=='TlzState') {
				this.nativeWindow.x=0;
				this.nativeWindow.y=0;
			}
			trace("New state: " + event.newState);	
		}
		
		
		protected function windowedapplication1_initializeHandler(event:FlexEvent):void
		{
			this.addEventListener(StateChangeEvent.CURRENT_STATE_CHANGE,traceState);
			
			
		}
		
		
		protected function windowedapplication1_preinitializeHandler(event:FlexEvent):void
		{
			ApplicationController.initialize([AIRServiceProvider], 
				AIRServiceProvider.ID, File.applicationStorageDirectory.resolvePath("gapdesktoprx").nativePath);
			
		}
		
		
		protected function exampleList_changeHandler(event:IndexChangeEvent):void
		{
			
			var viewer:GraphViewer = new GraphViewer();
			viewer.example = RxUtils.clone(event.currentTarget.selectedItem) as Example;
			viewer.label = viewer.example.descShort;
			
			currentState = 'TlzState';
			navigator.addChild(viewer);
			
			navigator.selectedChild = viewer;
			viewer.graphHTML.location = viewer.example.graph.localPath + "#" + viewer.example.urlHash;
			
			
			//trace ("Selected item: " + event.currentTarget.selectedItems);
		}
		
	]]></fx:Script>
	<s:states>
		<s:State name="MainState"/>
		<s:State name="SettingsState"/>
		<s:State name="TooltipState"/>
		<s:State name="TosState"/>
		<s:State name="TlzState"/>
		<s:State name="ListLightBoxState"/>
	</s:states>
	<fx:Declarations>
		<s:Parallel id="Sequence1">
			<s:Parallel target="{button4}">
				<s:SetAction property="enabled" value="false"/>
			</s:Parallel>
		</s:Parallel>
	</fx:Declarations>
	<s:Group id="tlzgroup" width="100%" height="100%" includeIn="TlzState,ListLightBoxState" alpha.ListLightBoxState="20">
		<s:layout> 
			<s:VerticalLayout/>
		</s:layout>
		<s:Group id="tlzbuttonrow">
			<s:layout>
				<s:HorizontalLayout/>
			</s:layout>
			
			<s:Button skinClass="gapdesktoprx.components.catalyst.MainButton" click="currentState='ListLightBoxState'" label="Open menu"/>
			<s:Button skinClass="gapdesktoprx.components.catalyst.MainButton" label="Bookmark this graph"/>
			<s:Button skinClass="gapdesktoprx.components.catalyst.MainButton" label="Full screen"/>
		</s:Group>
		
		<containers:SuperTabNavigator id="navigator" x="0" y="0" width="100%" height="100%" editableTabLabels="true" creationPolicy="all" fontFamily="Avenir LT Std 35 Light"/>
		
	</s:Group>
	
	<s:Group id="menugroup" width="517" height="655">
		<s:Rect width="655" height="655" includeIn="ListLightBoxState">
			<s:fill>
				<s:LinearGradient rotation="270" scaleX="74" x="327.5" y="74">
					<s:GradientEntry color="0xD9D9D9" flm:midpoint="0.208790988922119" ratio="0"/>
					<s:GradientEntry color="0xEFEFEF" flm:midpoint="0.694443969726563" ratio="0.564417"/>
					<s:GradientEntry color="0xEEEEEE" ratio="1"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		
		<s:Group id="bigbuttongroup" includeIn="ListLightBoxState,MainState,TooltipState">
			<s:Button alpha.TooltipState="0.4" id="button1" skinClass="gapdesktoprx.components.catalyst.SplashButton" x="16" y="91"/>
			
		</s:Group>
		<s:Group id="headinggroup" excludeFrom="TlzState">
			<s:SkinnableContainer id="skinnablecontainer1" includeIn="TosState" skinClass="gapdesktoprx.components.catalyst.ScrollPanel2" x="22" y="120">
			</s:SkinnableContainer>
			<s:Rect height="74" d:id="12" ai:objID="615b9b10" width="655" x="0" y="0">
				<s:fill>
					<s:LinearGradient rotation="270" scaleX="74" x="327.5" y="74">
						<s:GradientEntry color="0xD9D9D9" flm:midpoint="0.208790988922119" ratio="0"/>
						<s:GradientEntry color="0xEFEFEF" flm:midpoint="0.694443969726563" ratio="0.564417"/>
						<s:GradientEntry color="0xEEEEEE" ratio="1"/>
					</s:LinearGradient>
				</s:fill>
			</s:Rect>
			<s:Line ai:objID="615ba0d0" x="0.5" xTo="655" y="74.5">
				<s:stroke>
					<s:SolidColorStroke caps="none" color="0x6C6C6C" joints="miter" miterLimit="4" scaleMode="normal" weight="1"/>
				</s:stroke>
			</s:Line>
			<s:RichText color="#000000" fontFamily="Times" fontSize="36" d:id="13" kerning="on" ai:objID="615bad20" tabStops="S0 S50 S100 S150 S200 S250 S300 S350 S400 S450 S500" textAlign="center" d:userLabel="Gapminder Desktop" whiteSpaceCollapse="preserve" width="451" x="130" y="14">
				<s:content><s:p><s:span fontFamily="Avenir LT Std 95 Black">Gapminder </s:span><s:span fontFamily="Avenir LT Std 35 Light">Desktop</s:span></s:p></s:content>
			</s:RichText>
			<s:RichText color="0x000000" fontFamily="Avenir LT Std 35 Light" fontSize="14" height="20" d:id="17" kerning="on" lineHeight="120%" ai:objID="615bb220" textAlign="center" d:userLabel="No internet required" whiteSpaceCollapse="preserve" width="169" x="271" y="49">
				<s:content><s:p d:id="18" whiteSpaceCollapse="collapse"><s:span d:id="19">No internet required</s:span></s:p></s:content>
			</s:RichText>
			<s:RichText color="#000000" fontFamily="Avenir LT Std 45 Book" fontSize="10" height="10" text="Updated 11/11/2009 (v 1.0)" textAlign="end" whiteSpaceCollapse="preserve" width="124" x="527" y="60"/>
			<s:RichText color="#000000" fontFamily="Avenir LT Std 85 Heavy" fontSize="16" height="13" id="richtext6" includeIn="SettingsState,TosState" tabStops="S0 S50 S100 S150 S200 S250 S300 S350 S400" tabStops.TosState="S0 S50 S100 S150 S200 S250 S300 S350" text="Settings" text.TosState="Terms of use for Gapminder Desktop and the Gapminder website" width="313" width.TosState="604" x="23" y="89"/>
		</s:Group>
		<s:CheckBox id="checkbox2" includeIn="SettingsState" label="Check for updates automatically" skinClass="gapdesktoprx.components.catalyst.Checkbox1" x="26" y="114"/>
		<s:Button id="button2" includeIn="SettingsState" label="Check for updates nowâ€¦" skinClass="gapdesktoprx.components.catalyst.Button3" x="26" y="143"/>
		<s:Button id="button0" includeIn="SettingsState" label="Restore default graphsâ€¦" skinClass="gapdesktoprx.components.catalyst.Button3" x="25" y="186"/>
		<s:Button id="closeSettingsButton" click="closeSettingsButton_clickHandler()" includeIn="SettingsState,TosState" label="Close settings" label.TosState="Close" skinClass="gapdesktoprx.components.catalyst.Button3" x="26" x.TosState="24" y.SettingsState="232" y.TosState="465"/>
		<s:Group id="examplebuttongroup" d:userLabel="ExampleButton" excludeFrom="SettingsState,TosState,TlzState">
			<s:Rect alpha="0" height="31" id="rect0" d:userLabel="Item Highlight" width="215" x="409" y="135">
				<s:fill>
					<s:SolidColor color="0xCED7EE"/>
				</s:fill>
			</s:Rect>
			<s:List id="exampleList" skinClass="gapdesktoprx.components.catalyst.DataList1" x="406" y="134" dataProvider="{Rx.models.index(Example)}" change="exampleList_changeHandler(event)">
			</s:List>
		</s:Group>
		<s:Group id="notificationgroup" d:id="33" ai:objID="615c2a10" d:userLabel="Notification" excludeFrom="SettingsState,TosState,TlzState,ListLightBoxState">
			<s:Button skinClass="gapdesktoprx.components.catalyst.Button1" x="0" y.MainState="489" y.TooltipState="490" y.SettingsState="490" y.TosState="490" id="button4" click="button_clickHandler_3()"/>
			<s:Button skinClass="gapdesktoprx.components.catalyst.Button2" x.MainState="630" y.MainState="495" x.TooltipState="623" y.TooltipState="497" x.SettingsState="623" y.SettingsState="497" x.TosState="623" y.TosState="497" id="button5"/>
		</s:Group>
		<s:Group id="settingsbuttonsgroup" excludeFrom="SettingsState,TosState,TlzState">
			<s:Button id="adminButton" click="admin_clickHandler(event)" skinClass="gapdesktoprx.components.catalyst.Settings_Button" visible="true" label="Admin" x="430" y="472"/>
			<s:Button id="settingsbutton" click="button_clickHandler()" skinClass="gapdesktoprx.components.catalyst.Settings_Button" x="581" y="472"/>
			<s:Button id="tosbutton" click="tosbutton_clickHandler()" skinClass="gapdesktoprx.components.catalyst.Termsofuse_Button" x="488" y="472"/>
		</s:Group>
		<s:Group id="introtextgroup" excludeFrom="SettingsState,TosState,TlzState">
			<s:RichText alpha.TooltipState="0.4" color="0x000000" fontFamily="Avenir LT Std 65 Medium" fontSize="17" height="40" id="richtext2" d:id="47" kerning="on" lineHeight="120%" ai:objID="5f2f3690" d:userLabel="â€¦or go directly to a graph on:" whiteSpaceCollapse="preserve" width="246" x="409" y="91">
				<s:content><s:p d:id="48" whiteSpaceCollapse="collapse"><s:span d:id="49">â€¦or go directly to a graph on:</s:span></s:p></s:content>
			</s:RichText>
			<s:Line alpha.TooltipState="0.4" id="line1" ai:objID="5f2f3a20" x="390.5" y="91.5" yTo="374">
				<s:stroke>
					<s:SolidColorStroke caps="none" color="0x6C6C6C" joints="miter" miterLimit="4" scaleMode="normal" weight="1"/>
				</s:stroke>
			</s:Line>
		</s:Group>
		<s:Group id="tooltip" includeIn="TooltipState">
			
			<s:Rect height="198" id="rect2" width="176" x="221.5" y="135.5">
				<s:stroke>
					<s:SolidColorStroke caps="none" color="#d9d9d9" joints="miter" miterLimit="4" weight="1"/>
				</s:stroke>
				<s:fill>
					<s:SolidColor color="0xFFFFFF"/>
				</s:fill>
			</s:Rect>
			<s:RichText color="#333333" fontFamily="Avenir LT Std 45 Book" fontSize="12" height="193" id="richtext1" tabStops="S0 S50 S100 S150" textAlign="justify" width="161" x="230" y="143">
				<s:text><![CDATA[Explore the spread of the HIV epidemic since 1980. HIV is now global but some countries are much harder hit than others. See the patterns and trends of HIV and how the disease relates to other indicators. In the initial graph, the bubble size is the number of people living with HIV/AIDS and the y axis is the percentage of the population. The x axis shows income per person. ]]></s:text>
			</s:RichText>
		</s:Group>		
		
	</s:Group>
	<s:transitions>
		<s:Transition autoReverse="true" fromState="MainState" toState="TooltipState">
			<s:Parallel>
				<s:Parallel target="{richtext2}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{line1}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{button1}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{tooltip}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{button4}">
					<s:Move autoCenterTransform="true" duration="0"/>
				</s:Parallel>
				<s:Parallel target="{button5}">
					<s:Move autoCenterTransform="true" duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition autoReverse="true" fromState="TooltipState" toState="MainState">
			<s:Parallel>
				<s:Parallel target="{button1}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{richtext2}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{line1}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{tooltip}">
					<s:Fade duration="500"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition autoReverse="true" fromState="MainState" toState="TosState">
			<s:Parallel>
				<s:Parallel target="{bigbuttongroup}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{richtext6}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{closeSettingsButton}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{skinnablecontainer1}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{examplebuttongroup}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{settingsbuttonsgroup}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{introtextgroup}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{button1}">
					<s:Fade alphaTo="0" d:noAutoDelete="true">
						<s:easer>
							<s:Linear easeInFraction="0.25" easeOutFraction="0.25"/>
						</s:easer>
					</s:Fade>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition autoReverse="true" fromState="TosState" toState="MainState">
			<s:Parallel>
				<s:Parallel target="{bigbuttongroup}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{richtext6}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{closeSettingsButton}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{skinnablecontainer1}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{examplebuttongroup}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{settingsbuttonsgroup}">
					<s:Fade duration="500"/>
				</s:Parallel>
				<s:Parallel target="{introtextgroup}">
					<s:Fade duration="500"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition autoReverse="true" fromState="SettingsState" toState="MainState">
			<s:Parallel>
				<s:Parallel target="{bigbuttongroup}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{richtext6}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{checkbox2}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{button2}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{button0}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{closeSettingsButton}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{examplebuttongroup}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{settingsbuttonsgroup}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{introtextgroup}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{notificationgroup}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{button4}">
					<s:Move autoCenterTransform="true" duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="TosState" toState="TooltipState" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bigbuttongroup}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{skinnablecontainer1}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{richtext6}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{closeSettingsButton}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{examplebuttongroup}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{notificationgroup}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{settingsbuttonsgroup}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{introtextgroup}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{tooltip}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
	</s:transitions>
</s:WindowedApplication>
