<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:s="library://ns.adobe.com/flex/spark" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:d="http://ns.adobe.com/fxg/2008/dt" xmlns:ai="http://ns.adobe.com/ai/2009"
				toolTip="{_example.content}"
				xmlns:ns="library://ns.adobe.com/flex/mx">
	<fx:Script>
		<![CDATA[
			import gapdesktoprx.events.ExampleRolloutEvent;
			import gapdesktoprx.models.Example;
			[Bindable]
			private var _example:Example;
			
			[Embed(source="assets/icons/gapgen.png")]
			private var gapgen:Class;
			
			[Embed(source="assets/icons/usergen.png")]
			private var usergen:Class;
			
			[Bindable]
			private var logo:Class;
			
			override public function set data(value:Object) : void {
				super.data = value;
				if (value is Example) {
					_example = Example(value);
					if (_example.userGenerated) {
						logo = usergen;
					}
					else
					{
						logo=gapgen;
					}
				}
			}
			
			import gapdesktoprx.events.ExampleRolloverEvent;
			protected function group_rollOverHandler():void
			{
				dispatchEvent(new ExampleRolloverEvent(_example,true));
			}
			
			protected function group_rollOutHandler():void
			{
				dispatchEvent(new ExampleRolloutEvent(true));
			}
			
		]]>
		
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	<s:Rect d:userLabel="Item Highlight" width="100%" height="31" alpha.normal="0" alpha.hovered="0.4" alpha.selected="0.8" id="rect1">
		<s:fill>
			<s:SolidColor color="0xCED7EE"/>
		</s:fill>
	</s:Rect>
	<s:Group x="0" y="0" rollOver="group_rollOverHandler()" rollOut="group_rollOutHandler()">
		<s:filters>
			<s:GlowFilter includeIn="hovered" blurX="6.0" blurY="6.0" color="#ee0202" inner="true" strength="3" alpha="1.0" quality="2" knockout="false"/>
			<s:GlowFilter includeIn="selected" blurX="6.0" blurY="6.0" color="#ee0202" inner="true" strength="3" alpha="1.0" quality="2" knockout="false"/>
		</s:filters>
		<s:Rect height="30" width="250" x="0.5" y="0.5">
			<s:fill>
				<s:LinearGradient rotation="270" scaleX="30" x="107.543" y="30.5">
					<s:GradientEntry color="0xD9D9D9" ratio="0"/>
					<s:GradientEntry color="0xEFEFEF" ratio="0.564417"/>
					<s:GradientEntry color="0xEEEEEE" ratio="1"/>
				</s:LinearGradient>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke caps="none" color="0xBDCCD4" joints="miter" miterLimit="4" scaleMode="normal" weight="1"/>
			</s:stroke>
		</s:Rect>
		<ns:Image source="{logo}" x="6" y="6" width="16" height="16"/>
		<ns:Image includeIn="hovered" right="6" y="10" source="@Embed(source='assets/icons/play.png')"/>
		<s:RichText color="0x000000" fontFamily="Avenir LT Std 65 Medium" fontSize="14" height="16" d:id="26" kerning="on" lineHeight="120%" ai:objID="615c2180" text="{_example.name}" textAlign="justify" whiteSpaceCollapse="preserve" width="100%" x="30" y="10"></s:RichText>
		<s:RichText visible="{_example.userGenerated}" text="usergen"/>
	</s:Group>
	<s:transitions>
		<s:Transition fromState="selected" toState="normal" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{rect1}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="normal" toState="hovered" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{rect1}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
	</s:transitions>
</s:ItemRenderer>
