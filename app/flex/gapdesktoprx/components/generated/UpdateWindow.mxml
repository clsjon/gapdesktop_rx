<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/halo" width="400" height="300" initialize="window1_initializeHandler(event)">
	<s:states>
		<mx:State name="Available"/>
		<mx:State name="Downloading"/>
		<mx:State name="InstallNow"/>
		<mx:State name="None"/>
		<mx:State name="Main"/>
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.controls.Alert;
			import air.update.events.DownloadErrorEvent;
			import air.update.events.StatusUpdateErrorEvent;
			import air.update.events.StatusUpdateEvent;
			import air.update.events.UpdateEvent;
			import air.update.ApplicationUpdater;
			
			private var updater:ApplicationUpdater;
			
			private var version:String;
			private var details:String;
			private var previousVersion:String;
			private var currentVersion:String;
			
			
			protected function window1_initializeHandler(event:FlexEvent):void {
				updater = new ApplicationUpdater();
				updater.delay  = 1;
				updater.updateURL = "http://www.gapminder.org/desktop/update-test.xml"
				updater.addEventListener(UpdateEvent.INITIALIZED,updaterInitialized)
				updater.addEventListener(StatusUpdateEvent.UPDATE_STATUS,statusUpdate);
				updater.addEventListener(StatusUpdateErrorEvent.UPDATE_ERROR,statusUpdateError);
				updater.addEventListener(UpdateEvent.DOWNLOAD_START,downloadStarted);
				updater.addEventListener(ProgressEvent.PROGRESS,downloadProgress);
				updater.addEventListener(UpdateEvent.DOWNLOAD_COMPLETE,downloadComplete);
				updater.addEventListener(DownloadErrorEvent.DOWNLOAD_ERROR,downloadError);
				updater.installUpdate()
				currentState="Main";
				
				updater.initialize();
				
			}
		
            private function updaterInitialized(event:UpdateEvent):void{
                     previousVersion = event.target.previousVersion;
                     currentVersion = event.target.currentVersion;
               }


              private function statusUpdate(event:StatusUpdateEvent):void{
                     event.preventDefault();
                     if(event.available){
                          currentState="Available";
                          version =  event.version;
                          details = String(event.details);
                     } else {
                          currentState="None";
                     }
               }


            private function statusUpdateError(event:StatusUpdateErrorEvent):void{
               currentState="";
                     Alert.show("An error has occurred while checking for updates",
                                "StatusUpdateEvent.UPDATE_STATUS");
                     close();
               }

            private function downloadStarted(event:UpdateEvent):void{
                     currentState="Downloading";
               }

               private function downloadError(event:DownloadErrorEvent):void{
                     currentState="";
                     Alert.show("An error has occurred while downloading the update",
                                "DownloadErrorEvent.DOWNLOAD_ERROR");
                     close();
               }

               private function downloadProgress(event:ProgressEvent):void{
                     dBar.setProgress(event.bytesLoaded, event.bytesTotal);
               }

               private function downloadComplete(event:UpdateEvent):void{
                     event.preventDefault();
                     currentState="InstallNow";
               }
			}


		]]>
	</fx:Script>
	<s:layout>
	<s:VerticalLayout/>
	</s:layout>
	<s:RichText fontFamily="Garamond" text="State: {currentState}"/>
		<s:RichText fontFamily="Garamond" id="mainText" 
			text.Available="An update is available."
			text.Downloading="Downloading update."
			text.InstallNow="Install now?"
			text.Main="Would you like to check for a new version?"
			text.None="You are already running the latest version."
		/>
		<s:HGroup>
			
		<s:Button id="cancelButton" label="Close" click="close()" includeIn="Main,Available,None,InstallNow"/>
		<s:Button id="downloadUpdateButton" label="Download now" click="updater.downloadUpdate();" includeIn="Available"/>
		<s:Button id="installUpdateButton" label="Install now" click="updater.installUpdate();" includeIn="InstallNow"/>
		<s:Button id="checkButton" label="Check for update" click="updater.checkNow();" includeIn="Main"/>
		</s:HGroup>
		
		<mx:ProgressBar id="dBar" visible="false" visible.Downloading="true"/>

</s:Window>
