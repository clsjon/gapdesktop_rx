<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/halo" width="600" height="500"
		 creationComplete="group1_creationCompleteHandler(event)"
		 xmlns:ns="library://ns.adobe.com/flex/mx">
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			import flash.events.MouseEvent;
			
			import gapdesktoprx.components.catalyst.ExampleList;
			import gapdesktoprx.events.ExampleSelectEvent;
			import gapdesktoprx.models.Example;
			
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			import org.restfulx.collections.RxCollection;
			
			import spark.events.IndexChangeEvent;
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				
			}
			
			private function titleWindow_close(evt:CloseEvent):void {
				PopUpManager.removePopUp(this);
			}
			
			
			protected function closeButton_clickHandler(event:MouseEvent):void
			{
				PopUpManager.removePopUp(this);
			}
			
			
			protected function graphList_changeHandler(event:IndexChangeEvent):void
			{
				this.dispatchEvent(new ExampleSelectEvent(event.currentTarget.selectedItem as Example,true));
				PopUpManager.removePopUp(this);
				
			}
			
			
			protected function gapGraphs_changeHandler(event:ListEvent):void
			{
				var item:Object = event.currentTarget.selectedItem;
				if (gapGraphs.dataDescriptor.isBranch(item)) {
					trace('branch');
				} else {
					this.dispatchEvent(new ExampleSelectEvent(item as Example,true));
					PopUpManager.removePopUp(this);
				}
			}
			

			protected function gapGraphs_renderHandler(event:Event):void
			{
				var tree:Tree = event.currentTarget as Tree;
				var dp:RxCollection = tree.dataProvider as RxCollection;
					
				tree.expandChildrenOf(dp,true);
			}


		]]>
	</fx:Script>
	
	<fx:Metadata>
		[Event(name="exampleSelected", type="gapdesktoprx.events.ExampleSelectEvent")]
	</fx:Metadata>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="#FFFFFF"/>
		</s:fill>
	</s:Rect>
	<s:Group id="main" x="0" y="0" width="600" height="500">
		<s:layout><s:VerticalLayout/></s:layout>
		
		<s:Button id="closeButton" click="closeButton_clickHandler(event)" label="Close"/>
		<s:Group id="lists">
			<s:layout><s:HorizontalLayout gap="30" horizontalAlign="center" verticalAlign="contentJustify"/></s:layout>
			<s:Group id="gapexamples" width="100%">
				<s:layout><s:VerticalLayout horizontalAlign="contentJustify"/></s:layout>
				<s:Label id="gapGraphsLabel" text="Gapminder graphs" width="100%"/>				
				<ns:Tree id="gapGraphs" dataProvider="{catalyst.models.usedMainTags}" change="gapGraphs_changeHandler(event)" width="100%"/>
			</s:Group>
			<s:Group id="userexamples" width="100%">
				<s:layout><s:VerticalLayout/></s:layout>
				<s:Label id="userGraphsLabel" text="Your own graphs"/>				
				<s:List id="userGraphList" width="300" dataProvider="{catalyst.models.userExamples}" change="graphList_changeHandler(event)"/>
			</s:Group>
		</s:Group>
	</s:Group>
</s:Group>
