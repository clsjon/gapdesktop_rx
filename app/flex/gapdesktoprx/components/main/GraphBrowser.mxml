<?xml version="1.0" encoding="utf-8"?>
<mx:Window xmlns:mx="http://www.adobe.com/2006/mxml" width="{Capabilities.screenResolutionX}" height="{Capabilities.screenResolutionY}" backgroundColor="#CEDCE3" systemChrome="none">
<mx:Script>
	<![CDATA[
		import org.restfulx.Rx;
		import org.restfulx.utils.RxUtils;
		import gapdesktoprx.models.Graph;
		import gapdesktoprx.models.Example;
		
		[Bindable]
   	 	private var example:Example = new Example();
	
	
		[Bindable]
		private var hash:String = "";
		
		private function updateHash(newHash:String):void {
			trace("Incoming hash from swf is: " + newHash);
			hash = newHash;
		}
		public function setExample(inExample:Example):void {
			examplesList.selectedItem = inExample;
			onExampleSelect();		
		}
		
		private function newExample():void {
			if (!RxUtils.isEmpty(hash)) {
      			example = new Example();
      			example.urlHash = hash;
      			
      			examplesList.selectedIndex = -1;
   			}
    	}

	    private function destroyExample():void {
    	  example.destroy({onSuccess: onExampleDestroy});
    	}
  
  		private function onExampleSelect():void {
     	 	example = RxUtils.clone(examplesList.selectedItem) as Example;
     	 	trace (example.graph.localPath + example.urlHash);
     	 	var url:String = example.graph.localPath + "#" + example.urlHash;
     		graphBrowser.location = url;
     		graphBrowser.htmlLoader.window.embedApplication(url);
     		//trace(graphBrowser.htmlLoader.window.so);
     		//graphBrowser.htmlLoader.window.so.call('onHashChanged',example.urlHash);
     		//graphBrowser.htmlLoader.window.so.call('onHashChanged',example.urlHash);
     		//graphBrowser.htmlLoader.window.so.call('onHashChanged',example.urlHash);
     		//graphBrowser.htmlLoader.window.historyChange(example.urlHash);
     		//graphBrowser.htmlLoader.load(new URLRequest(example.graph.localPath + example.urlHash));
     		//graphBrowser.reload();
     	 	//graphBrowser.location = example.graph.localPath + example.urlHash; 
    	}
  
    private function onExampleCreate(result:Example):void {
      example = new Example;
    }
  
    private function onExampleUpdate(result:Example):void {
      examplesList.selectedItem = result;
      onExampleSelect();
    }
  
    private function onExampleDestroy(result:Example):void {
      onExampleCreate(result);
    }

		
		public var closebutton:Class;

		private function fullScreenButtonHandler(event:MouseEvent):void
		{
			this.stage.displayState=StageDisplayState.FULL_SCREEN_INTERACTIVE;
			this.graphBrowser.invalidateDisplayList();
		}
		private function htmlErrorHandler(event:HTMLUncaughtScriptExceptionEvent):void {
			event.preventDefault();
			trace("exceptionValue: ", event.exceptionValue);
			for (var i:int = 0; i < event.stackTrace.length; i++)  
			{  
 				trace("sourceURL:", event.stackTrace[i].sourceURL);  
				trace("line:", event.stackTrace[i].line);  
				trace("function:", event.stackTrace[i].functionName);  
			}  

		}
		
		private function addBookmarkButtonHandler(event:MouseEvent):void {
			
		}
		
		private function showGraphList_handler(event:MouseEvent):void {
			examplesList.visible=true;
			this.invalidateDisplayList();
		}
		
		private function graphBrowser_completeHandler(event:Event):void
		{
			graphBrowser.htmlLoader.window.updateHash = this.updateHash;
		}
				
	]]>
</mx:Script>
<mx:HBox>
		<mx:Image id="closeButton" click="this.close()" source="@Embed(source='/assets/icons/closebutton.png')"/>
		<mx:Image id="fullScreenButton" click="fullScreenButtonHandler(event)" source="@Embed(source='/assets/icons/fullscreen.png')"/>
		<mx:Button id="addBookmarkButton" click="addBookmarkButtonHandler(event)" label="Add favorite" enabled="{RxUtils.isEmpty(hash)}"/>
		<mx:Button id="showGraphListButton" click="showGraphList_handler(event)" label = "Show graph list"/>
</mx:HBox>
<mx:Canvas height="100%" width="100%">
	
	<mx:HTML id="graphBrowser" location="" x="0" y="0"  width="100%" height="100%" borderColor="#FFFFFF" creationComplete="graphBrowser_completeHandler(event)"/>
	
	
</mx:Canvas>

<mx:VBox id="exampleListCanvas" height="400" width="100%" visible="true" x="0" y="0">
	<mx:List id="examplesList" dataProvider="{Rx.models.index(Example, {NestedBy: [Graph]})}" change="onExampleSelect()" width="100%" height="100%"/>
	<mx:TextInput text="{hash}"/>
	<mx:TextInput id="loc" text="{graphBrowser.location}" enter="graphBrowser.location = loc.text" />
</mx:VBox>

</mx:Window>