<?xml version="1.0" encoding="utf-8"?>
<mx:Window 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:containers="flexlib.containers.*"
	width="{Capabilities.screenResolutionX}" 
	height="{Capabilities.screenResolutionY}" 
	backgroundColor="#CEDCE3" 
	systemChrome="none" xmlns:main="gapdesktoprx.components.main.*" 
	xmlns:s="library://ns.adobe.com/flex/spark">
	
<mx:Script>
	<![CDATA[
		import org.restfulx.Rx;
		import org.restfulx.utils.RxUtils;
		import gapdesktoprx.models.Graph;
		import gapdesktoprx.models.Example;
		
		
		public var closebutton:Class;

		private function fullScreenButtonHandler(event:MouseEvent):void
		{
			this.stage.displayState=StageDisplayState.FULL_SCREEN_INTERACTIVE;
			//this.graphBrowser.invalidateDisplayList();
		}
		private function htmlErrorHandler(event:HTMLUncaughtScriptExceptionEvent):void {
			event.preventDefault();
			trace("exceptionValue: ", event.exceptionValue);
			for (var i:int = 0; i < event.stackTrace.length; i++)  
			{  
 				trace("sourceURL:", event.stackTrace[i].sourceURL);  
				trace("line:", event.stackTrace[i].line);  
				trace("function:", event.stackTrace[i].functionName);  
			}  

		}
		
		public function setExample(inExample:Example):void {
			examplesList.selectedItem = inExample;
			onExampleSelect();		
		}
		private function onExampleUpdate(result:Example):void {
      		examplesList.selectedItem = result;
      		onExampleSelect();
    	}
  
		
		private function addBookmarkButtonHandler(event:MouseEvent):void {
			
		}
		
			private function onExampleSelect():void {
     	 	//trace (example.graph.localPath + example.urlHash);
     	 	var viewer:GraphViewer = new GraphViewer();
     	 	viewer.example = RxUtils.clone(examplesList.selectedItem) as Example;
     	 	
     	 	viewer.label = viewer.example.descShort;
     	 	navigator.addChild(viewer);
     	 	navigator.selectedChild = viewer;
     	 	viewer.graphBrowser.location = viewer.example.graph.localPath + "#" + viewer.example.urlHash;
     	 	exampleListCanvas.visible=false;
     	 	
     		//graphBrowser.location = example.graph.localPath + "#" + example.urlHash;
     		//trace(graphBrowser.htmlLoader.window.so);
     		//graphBrowser.htmlLoader.window.so.call('onHashChanged',example.urlHash);
     		//graphBrowser.htmlLoader.window.historyChange(example.urlHash);
     		//graphBrowser.htmlLoader.load(new URLRequest(example.graph.localPath));
     		//graphBrowser.reload();
     	 	//graphBrowser.location = example.graph.localPath + example.urlHash; 
    	}

		
		private function showGraphList_handler(event:MouseEvent):void {
			exampleListCanvas.visible=!(exampleListCanvas.visible);
			this.invalidateDisplayList();
		}
		
		private function graphBrowser_completeHandler(event:Event):void
		{
			//graphBrowser.htmlLoader.window.updateHash = updateHash;
		}
				

		protected function graphBrowser_locationChangeHandler(event:Event):void
		{
			trace(event.toString());
		}


		protected function saveOverButton_clickHandler(event:MouseEvent):void
		{
			// TODO Auto-generated method stub
		}


		protected function saveAsNewButton_clickHandler(event:MouseEvent):void
		{
			// TODO Auto-generated method stub
		}

	]]>
</mx:Script>

<mx:VBox height="100%" width="100%">
	
<mx:HBox>
		<mx:Image id="closeButton" click="this.close()" source="@Embed(source='/assets/icons/closebutton.png')"/>
		<mx:Image id="fullScreenButton" click="fullScreenButtonHandler(event)" source="@Embed(source='/assets/icons/fullscreen.png')"/>
		<s:Button id="showGraphListButton" click="showGraphList_handler(event)" label = "Show graph list"/>
		<s:Button id="saveOverButton" click="saveOverButton_clickHandler(event)" label="Save graph"/>
		<s:Button id="saveAsNewButton" click="saveAsNewButton_clickHandler(event)" label="Save as new graph"/>
</mx:HBox>
<mx:Canvas height="100%" width="100%">
	
<containers:SuperTabNavigator id="navigator" width="100%" height="100%" editableTabLabels="true" creationPolicy="all">
	
</containers:SuperTabNavigator>
	
	
</mx:Canvas>
</mx:VBox>

<mx:Canvas id="exampleListCanvas" height="400" width="300" visible="false" x="100" y="100">
	<mx:List id="examplesList" dataProvider="{Rx.models.index(Example, {NestedBy: [Graph]})}" change="onExampleSelect()" width="100%" height="100%"/>
	<!--<mx:TextInput text="{hash}"/>-->
	<!--<mx:TextInput id="loc" text="{graphBrowser.location}" enter="graphBrowser.location = loc.text" />-->
</mx:Canvas>

</mx:Window>