<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx"	xmlns:s="library://ns.adobe.com/flex/spark" 
	height="100%"
	width="100%"
	backgroundColor="#EFEFEF"
	currentStateChanging="vbox1_currentStateChangingHandler(event)"
	>
	<fx:Metadata>	
		[Event(name="exampleChanged", type="events.ExampleChangeEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			
			import gapdesktoprx.models.Example;
			import gapdesktoprx.overrides.TlzHost;
			
			import mx.events.StateChangeEvent;
			import mx.graphics.ImageSnapshot;
			
			import org.restfulx.utils.RxUtils;
			
			private var _htmlLoader:HTMLLoader;
			
			private var _example:Example = new Example();
			
			private var unsavedHash:String;
			
			private function updateHash(newHash:String):void {
				if (unsavedHash != newHash) {
					unsavedHash = newHash;
					this.label = "[New example]";
				}
			}
			
			private function graphHTML_completeHandler(event:Event):void
			{
				//			_htmlLoader = new HTMLLoader();
				//			_htmlLoader.
				trace("graphBrowser_completeHandler");
				var html:HTML = event.currentTarget as HTML;
				html.htmlLoader.window.updateHash = updateHash;
				html.location = _example.url();
				this.stage.focus = graphHTML.htmlLoader;
				//this.graphHTML.htmlLoader.window.setFocus();
			}
			
			
			
			
			private function saveNewExample(name:String, hash:String):void {
				if (!RxUtils.isEmpty(hash)) {
					var newExample:Example = new Example;
					newExample.hash = hash;
					newExample.graph = _example.graph;
					newExample.userGenerated = true;
					newExample.name = name;
					invalidateDisplayList();
					_example = newExample;
					_example.create();
					this.label = _example.name;
					trace("New example: " + example.hash);
				}
			}
			
			private function destroyExample():void {
				_example.destroy({onSuccess: onExampleDestroy});
			}
			
			
			private function onExampleCreate(result:Example):void {
				_example = new Example;
			}
			
			
			private function onExampleDestroy(result:Example):void {
				//onExampleCreate(result);
			}
			
			
			
			protected function graphHTML_locationChangeHandler(event:Event):void
			{		
				trace('Location: ' + event.currentTarget.location);
			}
			
			public function get example():Example
			{
				return _example;
			}
			
			
			public function set example(value:Example):void
			{
				
				trace ('is the same: ' + (value.url()==_example.url()));
				trace ('incoming hash: ' + value.hash);
				_example = value;
				this.label = example.name;
				unsavedHash = value.hash;
				//var urlReq:URLRequest = new URLRequest(example.url());
				if (graphHTML) {
					graphHTML.location = example.url();
				}
				//		graphHTML.htmlLoader.load(urlReq);
				invalidateProperties();
				
			}
			
			public function bookmarkExample(name:String):void {
				trace ("The unsavedHash is: " + unsavedHash);
				saveNewExample(name,unsavedHash);	
			}
			
			
			protected function vbox1_currentStateChangingHandler(event:StateChangeEvent):void
			{
				if (event.newState == "ScreenshotState") {
					var screenDPI:Number = Capabilities.screenDPI;
					var pixCount:Number = graphHTML.height * graphHTML.width;
					var dpi:Number = Math.min(screenDPI,screenDPI / Math.pow(pixCount/500000,1)); 
					var tlzSnap:ImageSnapshot = ImageSnapshot.captureImage(graphHTML,dpi);
					screenshotLoader.load(tlzSnap.data as ByteArray);
				}
			}
			
		]]>
	</fx:Script>
	<mx:states>
		<s:State name="MainState"/>
		<s:State name="ScreenshotState"/>		
	</mx:states>
	<mx:Image id="screenshotLoader" includeIn="ScreenshotState" width="100%" height="100%"/>
	<mx:HTML id="graphHTML" htmlHost="{new TlzHost()}" x="0" y="0"  width="100%" height="100%" borderColor="#FFFFFF" creationComplete="graphHTML_completeHandler(event)" locationChange="graphHTML_locationChangeHandler(event)" includeIn="MainState"/>
</mx:VBox>