<?xml version="1.0" encoding="utf-8"?>
<mx:VBox
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	creationComplete="graphHTML_completeHandler(event)"
	height="100%"
	width="100%"
	label="{example.name}"
	>
	<mx:Metadata>
		[Event(name="exampleChanged", type="events.ExampleChangeEvent")]
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import flash.events.Event;
			
			import gapdesktoprx.events.ExampleChangeEvent;
			import gapdesktoprx.models.Example;
			import gapdesktoprx.overrides.TlzHost;
			
			import mx.utils.ObjectUtil;
			
			import org.restfulx.utils.RxUtils;
			
			private var _htmlLoader:HTMLLoader;
			
			[Bindable]
			private var _example:Example = new Example();
			
			private function updateHash(newHash:String):void {
				trace("Incoming hash from swf is: " + newHash);
				example.hash = newHash;
				example.name = '[New example]';
				//_example.hash = newHash;
				//newExample(newHash);
				//trace ('Example URL Hash:' +  _example.urlHash);
			}
			
			private function graphHTML_completeHandler(event:Event):void
			{
				//			_htmlLoader = new HTMLLoader();
				//			_htmlLoader.
				trace("graphBrowser_completeHandler");
				graphHTML.htmlLoader.window.updateHash = updateHash;
				graphHTML.setFocus();
			}
			
			
			
			
			private function newExample(hash:String):void {
				if (!RxUtils.isEmpty(hash)) {
					var newExample:Example = RxUtils.clone(_example) as Example;
					newExample.hash = hash;
					
					newExample.userGenerated = true;
					newExample.name = "[New example]";
					invalidateDisplayList();
					example = newExample;
					trace("New example");
					trace(example.hash);
					//this.label = example.descShort;	
					//    			examplesList.selectedIndex = -1;
				}
			}
			
			private function destroyExample():void {
				_example.destroy({onSuccess: onExampleDestroy});
			}
			
			
			private function onExampleCreate(result:Example):void {
				_example = new Example;
			}
			
			
			private function onExampleDestroy(result:Example):void {
				//onExampleCreate(result);
			}
			
			
			
			protected function graphHTML_locationChangeHandler(event:Event):void
			{
				trace('Location: ' + event.currentTarget.location);
			}
			
			
			protected function graphHTML_clickHandler(event:MouseEvent):void
			{
				//trace(event.currentTarget.toString());
			}
			
			[Bindable(event="exampleChange")]
			public function get example():Example
			{
				return _example;
			}
			
			
			public function set example(value:Example):void
			{
				_example = value;
				invalidateProperties();
				this.dispatchEvent(new Event("exampleChange"));
				this.dispatchEvent(new ExampleChangeEvent(example,true));
				//trace(value.urlhash);
				//this.graphHTML.location = 'app:/assets/graphs/' + example.graph.shortName + "/index.html#" + example.hash;

			}
			
			public function bookmarkExample(name:String):void {
				var newExample:Example = RxUtils.clone(_example) as Example;
				
				trace ("New example hash: " + newExample.hash);
				newExample.name = name;
				newExample.id = null;
				newExample.userGenerated = true;
				newExample.mainTag = null;
				newExample.tags = null;
				newExample.introText = null;
				newExample.content = null;
				newExample.introImage = null;
				example = newExample;
				if (example.id) {
					trace('example update for example id: ' + example.id);
					example.update();
				} else {
					example.create();
					trace('example create for example id: ' + example.id);
				}
				
			}
		]]>
	</mx:Script>
	<s:RichText fontSize="8" text="{graphHTML.location}" width="100%" height="10" />
	<s:RichText fontSize="8" text="{example.id}" height="10"/>
	<mx:HTML id="graphHTML" htmlHost="{new TlzHost()}" location="{_example.url()}" x="0" y="0"  width="100%" height="100%" borderColor="#FFFFFF" creationComplete="graphHTML_completeHandler(event)" locationChange="graphHTML_locationChangeHandler(event)"  click="graphHTML_clickHandler(event)" />
</mx:VBox>


