<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:display="flash.display.*" 
	xmlns:events="flash.events.*" 
	layout="absolute" 
	initialize="init()" 
	creationComplete="creationCompleteHandler()" 
	applicationComplete="applicationCompleteHandler()" 
	width="760" 
	height="760">
	<mx:Style source="/assets/css/styles.css"/>
<mx:Script>
	<![CDATA[
		import gapdesktoprx.components.main.UpdateWindow;
		import mx.core.FlexGlobals;
		import mx.controls.Image;
		import mx.core.Application;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		import mx.collections.XMLListCollection;
		import mx.controls.Alert;
		import air.update.events.UpdateEvent;
		import flash.filesystem.File;
		import mx.events.ListEvent;
		import mx.events.ItemClickEvent;
		import gapdesktoprx.components.main.*;
	
	
	    import org.restfulx.services.air.AIRServiceProvider;
      	import org.restfulx.services.http.XMLHTTPServiceProvider;
      	import org.restfulx.Rx;
      	import gapdesktoprx.controllers.ApplicationController;
		private function init():void {
    		ApplicationController.initialize([AIRServiceProvider], 
        	AIRServiceProvider.ID, File.applicationStorageDirectory.resolvePath("gapdesktoprx").nativePath);
      	}

//		[Embed(source="config/initialgraphs.xml")]
		[Bindable]
		private var initialGraphs:XMLListCollection;
		
		[Bindable]
		[Embed(source="assets/icons/world.png")]
		public var world:Class;
		
		[Bindable]
		[Embed(source="assets/icons/fourbig.png")]
		public var fourbig:Class;
		
		private var initialWidth:Number;
		private var initialHeight:Number;
		private var initialX:Number;
		private var initialY:Number;
		
		private var updateWindow:UpdateWindow;
	
		private function creationCompleteHandler():void
		{
			var initialGraphsLoader:URLLoader = new URLLoader();
			var request:URLRequest = new URLRequest("app:/config/initialgraphs.xml");
			initialGraphsLoader.addEventListener(Event.COMPLETE,initialGraphsResultHandler);
			initialGraphsLoader.addEventListener(IOErrorEvent.IO_ERROR,initialGraphsFaultHandler);
			initialGraphsLoader.load(request);
		}
		
		private function applicationCompleteHandler():void {
			//stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;
		}
		
		private function initialGraphsResultHandler(event:Event):void {
			var initXML:XML = new XML(event.target.data);
			initialGraphs = new XMLListCollection(initXML.graph);
			//graphList.invalidateList();
			 
		}
		
		private function initialGraphsFaultHandler(event:IOErrorEvent):void {
			Alert.show("Could not load information on initial graphs. Exiting application.");
			FlexGlobals.topLevelApplication.exit();
		}
		
		private function updaterInitialized(event:UpdateEvent):void {
			currentVersion.text = event.target.currentVersion;
		}
		
		private function onError(event:ErrorEvent):void {
    		Alert.show(event.toString());
		}

		private function button_clickHandler(event:MouseEvent):void 
		{
			var url:String = new String();
			var label:String = new String();
			switch(event.target.id) {
				case "worldButton":
				url="app:/assets/graphs/world/index.html";
				label="Gapminder World";
				break;
				case "chinaButton":
				url="app:/assets/graphs/mirror/index.html";
				label="Gapminder Mirror";
				break;
				case "fourbigButton":
				url="app:/assets/graphs/projections/index.html";
				label="Projections";
				break;
			}
			trace(url);
			var graph:GraphBrowser;
			graph = new GraphBrowser();
			graph.open();
			graph.title = label;
			//graph.graphBrowser.location = url;
			graph.nativeWindow.x = 0;
			graph.nativeWindow.y = 0;
		}
		protected function openNew_clickHandler(event:MouseEvent):void
		{
			var uploadWindow:UploadGraphFromUrl;
			uploadWindow = new UploadGraphFromUrl;
			uploadWindow.visible = false;
			uploadWindow.open(false);
		}
		
		private function admin_clickHandler(event:MouseEvent):void {
			var gdrx:GapdesktopRx;
			gdrx = new GapdesktopRx;
			gdrx.open();
		}
		
		private function openUpdateWindow():void {
			updateWindow = new UpdateWindow();
			updateWindow.open();
		}
	
	]]>
</mx:Script>
	<mx:VBox id="mainBox">
	<mx:HBox>
		
	<mx:Image source="/assets/icons/banner.png"/>
	<mx:Image source="assets/icons/slogan.png"/>
	</mx:HBox>
	<mx:Button
		id="worldButton"
		upSkin="@Embed(source='/assets/icons/world_large.png')"
		overSkin="@Embed(source='/assets/icons/world_large_over.png')"
		downSkin="@Embed(source='/assets/icons/world_large.png')"	
		click="button_clickHandler(event)"
	/>
		
	<mx:HBox>
	<mx:Button id="checkNowButton" click="openUpdateWindow();" label="Check for update" visible="true" skin="{null}"/>
	<mx:Button id="adminButton" click="admin_clickHandler(event)" visible="true" label="Admin"/>	
	
	<mx:Label id="currentVersion" text="Current version" visible="false"/>
	<mx:Button id="openNew" click="openNew_clickHandler(event)" label="More graphs" visible="false" skin="{null}"/>
	<mx:Label text="Terms of use"/>
	<mx:Label text = "About"/>
	</mx:HBox>
	
</mx:VBox>
</mx:WindowedApplication>
